openapi: 3.0.1
info:
  title: Mojaloop SDK Outbound Scheme Adapter API
  description: API specification for the Mojaloop SDK Outbound Scheme Adapter API â€“ to be implemented by the Digital Financial Service Provider's (DFSP) backend.
  
    
    **Note on terminology:** The term "Switch" is equal to the term "Hub", and the term "FSP" is equal to the term "DFSP".
  license:
    name: Apache License Version 2.0, January 2004
    url: http://www.apache.org/licenses/
  version: 1.0.0
paths:
  /:
    get:
      summary: Health check endpoint.
      responses:
        200:
          description: Returns empty body if the service is running.
  /transfers:
    post:
      summary: Sends money from one account to another
      description: The HTTP request `POST /transfers` is used to request the creation of a transfer for the transfer party.
      
      
        This method has two modes of operation. 
        
        - If the SDK configuration variable `AUTO_ACCEPT_QUOTES` is set to `"true"`, then this operation will block while progressing a transfer through the payee lookup, quote, and transfer stages. 
        
        - If `AUTO_ACCEPT_QUOTES` is set to `"false"`, then this method will return after payee lookup and quote, allowing the caller to examine the quote before proceeding to the transfer stage via the `PUT /transfers/{transferId}` method.
      tags:
        - Transfers
      requestBody:
        description: Transfer request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transferRequest'
        required: true
      responses:
        200:
          $ref: '#/components/responses/200'
        400:
          description: Malformed or missing required body, headers or parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          $ref: '#/components/responses/500'
          
  /transfers/{transferId}:
    put:
      summary: Continues a transfer that has paused at the quote stage in order to accept or reject the quote
      tags:
        - Transfers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transferContinuation'
      parameters:
        - $ref: '#/components/parameters/transferId'
      responses:
        200:
          $ref: '#/components/responses/200'
          
    get:
      summary: Retrieves information for a specific transfer
      description: The HTTP request `GET /transfers/{transferId}` is used to get information regarding a transfer created or requested earlier. The `{transferId}` in the URI should contain the `transferId` that was used for the creation of the transfer.
      tags:
        - Transfers
      parameters:
        - $ref: '#/components/parameters/transferId'
      responses:
        200:
          description: Transfer information successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferResponse'
        500:
          $ref: '#/components/responses/500'
  /quote:
    post:
      description: TBD
      summary: Quote
      tags:
        - quote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotesPostRequest'
      parameters:
      #Headers
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Length'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Date'
        - $ref: '#/components/parameters/X-Forwarded-For'
        - $ref: '#/components/parameters/FSPIOP-Source'
        - $ref: '#/components/parameters/FSPIOP-Destination'
        - $ref: '#/components/parameters/FSPIOP-Encryption'
        - $ref: '#/components/parameters/FSPIOP-Signature'
        - $ref: '#/components/parameters/FSPIOP-URI'
        - $ref: '#/components/parameters/FSPIOP-HTTP-Method'
      x-examples:
        application/json:
          quoteId: b51ec534-ee48-4575-b6a9-ead2955b8069
          transactionId: a8323bc6-c228-4df2-ae82-e5a997baf899
          transactionRequestId: a8323bc6-c228-4df2-ae82-e5a997baf890
          payee:
            partyIdInfo:
              partyIdType: PERSONAL_ID
              partyIdentifier: '16135551212'
              partySubIdOrType: DRIVING_LICENSE
              fspId: '1234'
            merchantClassificationCode: '4321'
            name: Justin Trudeau
            personalInfo:
              complexName:
                firstName: Justin
                middleName: Pierre
                lastName: Trudeau
              dateOfBirth: '1971-12-25'
          payer:
            partyIdInfo:
              partyIdType: PERSONAL_ID
              partyIdentifier: '16135551212'
              partySubIdOrType: PASSPORT
              fspId: '1234'
            merchantClassificationCode: '1234'
            name: Donald Trump
            personalInfo:
              complexName:
                firstName: Donald
                middleName: John
                lastName: Trump
              dateOfBirth: '1946-06-14'
          amountType: SEND
          amount:
            currency: USD
            amount: '123.45'
          fees:
            currency: USD
            amount: '1.25'
          transactionType:
            scenario: DEPOSIT
            subScenario: locally defined sub-scenario
            initiator: PAYEE
            initiatorType: CONSUMER
            refundInfo:
              originalTransactionId: b51ec534-ee48-4575-b6a9-ead2955b8069
              refundReason: free text indicating reason for the refund
            balanceOfPayments: '123'
          geoCode:
            latitude: '+45.4215'
            longitude: '+75.6972'
          note: Free-text memo
          expiration: '2016-05-24T08:38:08.699-04:00'
          extensionList:
            extension:
              - key: errorDescription
                value: This is a more detailed error description
              - key: errorDescription
                value: This is a more detailed error description
      responses:
        '202':
          $ref: '#/components/responses/Response202'

components:
  schemas:
  
    amountType:
      type: string
      enum:
      - SEND
      - RECEIVE
      description: SEND for send amount, RECEIVE for receive amount.
      
    currency:
      maxLength: 3
      minLength: 3
      type: string
      enum:
      - AED
      - AFN
      - ALL
      - AMD
      - ANG
      - AOA
      - ARS
      - AUD
      - AWG
      - AZN
      - BAM
      - BBD
      - BDT
      - BGN
      - BHD
      - BIF
      - BMD
      - BND
      - BOB
      - BRL
      - BSD
      - BTN
      - BWP
      - BYN
      - BZD
      - CAD
      - CDF
      - CHF
      - CLP
      - CNY
      - COP
      - CRC
      - CUC
      - CUP
      - CVE
      - CZK
      - DJF
      - DKK
      - DOP
      - DZD
      - EGP
      - ERN
      - ETB
      - EUR
      - FJD
      - FKP
      - GBP
      - GEL
      - GGP
      - GHS
      - GIP
      - GMD
      - GNF
      - GTQ
      - GYD
      - HKD
      - HNL
      - HRK
      - HTG
      - HUF
      - IDR
      - ILS
      - IMP
      - INR
      - IQD
      - IRR
      - ISK
      - JEP
      - JMD
      - JOD
      - JPY
      - KES
      - KGS
      - KHR
      - KMF
      - KPW
      - KRW
      - KWD
      - KYD
      - KZT
      - LAK
      - LBP
      - LKR
      - LRD
      - LSL
      - LYD
      - MAD
      - MDL
      - MGA
      - MKD
      - MMK
      - MNT
      - MOP
      - MRO
      - MUR
      - MVR
      - MWK
      - MXN
      - MYR
      - MZN
      - NAD
      - NGN
      - NIO
      - NOK
      - NPR
      - NZD
      - OMR
      - PAB
      - PEN
      - PGK
      - PHP
      - PKR
      - PLN
      - PYG
      - QAR
      - RON
      - RSD
      - RUB
      - RWF
      - SAR
      - SBD
      - SCR
      - SDG
      - SEK
      - SGD
      - SHP
      - SLL
      - SOS
      - SPL
      - SRD
      - STD
      - SVC
      - SYP
      - SZL
      - THB
      - TJS
      - TMT
      - TND
      - TOP
      - TRY
      - TTD
      - TVD
      - TWD
      - TZS
      - UAH
      - UGX
      - USD
      - UYU
      - UZS
      - VEF
      - VND
      - VUV
      - WST
      - XAF
      - XCD
      - XDR
      - XOF
      - XPF
      - YER
      - ZAR
      - ZMW
      - ZWD 
      
    dateOfBirth:
      type: string
      pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
      description: Date of birth in the form YYYY-MM-DD.

    errorResponse:
      type: object
      properties:
        statusCode:
          type: string
          description: Error code as string.
        message:
          type: string
          description: Error message text.
        transferState:
          $ref: '#/components/schemas/transferResponse'
  
    idType:
      type: string
      enum:
      - MSISDN
      - ACCOUNT_ID
      description: Below are the allowed values for the enumeration.
      
        - MSISDN -  An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.
        
        - ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.
        
    idValue:
      type: string
      minLength: 1
      maxLength: 128
      description: Identifier of the party.
  
    money:
      pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
      type: string    
    
    payerType:
      type: string
      enum:
      - CONSUMER
      - AGENT
      - BUSINESS
      - DEVICE

    timestamp:
      type: string
      pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
      description: An ISO-8601 formatted timestamp.
      
    transactionType:
      type: string
      enum:
      - TRANSFER
      description: Type of transaction.
      
    transferContinuation:
      type: object
      required:
        - acceptQuote
      properties:
        acceptQuote:
          type: boolean
          description: true if the caller wishes to accept the quote and proceed with the transfer, otherwise false.
          
    transferId:
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
      description: A Mojaloop API transfer identifier (UUID).

    transferParty:
      type: object
      required:
        - idType
        - idValue
      properties:
        type:
          $ref: '#/components/schemas/payerType'
        idType:
          $ref: '#/components/schemas/idType'
        idValue:
          $ref: '#/components/schemas/idValue'
        displayName:
          type: string
          description: Display name of the sender, if known.
        firstName:
          type: string
          description: Party first name.
        middleName:
          type: string
          description: Party middle name.
        lastName:
          type: string
          description: Party last name.
        dateOfBirth:
          $ref: '#/components/schemas/dateOfBirth'
        merchantClassificationCode:
          type: string
          description: Up to 4 digits specifying the sender's merchant classification, if known and applicable.
      
    transferRequest:
      type: object
      required:
        - homeTransactionId
        - from
        - to
        - amountType
        - currency
        - amount
        - transactionType
      properties:
        homeTransactionId:
          type: string
          description: Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems.
        from:
          $ref: '#/components/schemas/transferParty'
        to:
          $ref: '#/components/schemas/transferParty'
        amountType:
          $ref: '#/components/schemas/amountType'
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/money'
        transactionType:
          $ref: '#/components/schemas/transactionType'
        note:
          maxLength: 128
          type: string
          
    transferResponse:
      type: object
      required:
        - homeTransactionId
        - from
        - to
        - amountType
        - currency
        - amount
        - transactionType
      properties:
        transferId:
          $ref: '#/components/schemas/transferId'
        homeTransactionId:
          type: string
          description: Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems.
        from:
          $ref: '#/components/schemas/transferParty'
        to:
          $ref: '#/components/schemas/transferParty'
        amountType:
          $ref: '#/components/schemas/amountType'
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/money'
        transactionType:
          $ref: '#/components/schemas/transactionType'
        note:
          maxLength: 128
          type: string
        currentState:
          $ref: '#/components/schemas/transferStatus'
        lastError:
          type: string
          description: String giving details of any error that occurred during processing the request.    
    
    transferStatus:
      type: string
      enum:
      - ERROR_OCCURRED
      - WAITING_FOR_QUOTE_ACCEPTANCE
      - COMPLETED

    CorrelationId:
      title: CorrelationId
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      description: Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to RFC 4122, that is restricted by a regular expression for interoperability reasons. An UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (â€˜-â€˜).





    PartyIdType:
      title: PartyIdTypeEnum
      type: string
      enum:
        - MSISDN
        - EMAIL
        - PERSONAL_ID
        - BUSINESS
        - DEVICE
        - ACCOUNT_ID
        - IBAN
        - ALIAS
      description: >-
        Below are the allowed values for the enumeration - MSISDN An MSISDN
        (Mobile Station International Subscriber Directory Number, that is, the
        phone number) is used as reference to a participant. The MSISDN
        identifier should be in international format according to the ITU-T
        E.164 standard. Optionally, the MSISDN may be prefixed by a single plus
        sign, indicating the international prefix. - EMAIL An email is used as
        reference to a participant. The format of the email should be according
        to the informational RFC 3696. - PERSONAL_ID A personal identifier is
        used as reference to a participant. Examples of personal identification
        are passport number, birth certificate number, and national registration
        number. The identifier number is added in the PartyIdentifier element.
        The personal identifier type is added in the PartySubIdOrType element. -
        BUSINESS A specific Business (for example, an organization or a company)
        is used as reference to a participant. The BUSINESS identifier can be in
        any format. To make a transaction connected to a specific username or
        bill number in a Business, the PartySubIdOrType element should be used.
        - DEVICE A specific device (for example, a POS or ATM) ID connected to a
        specific business or organization is used as reference to a Party. For
        referencing a specific device under a specific business or organization,
        use the PartySubIdOrType element. - ACCOUNT_ID A bank account number or
        FSP account ID should be used as reference to a participant. The
        ACCOUNT_ID identifier can be in any format, as formats can greatly
        differ depending on country and FSP. - IBAN A bank account number or FSP
        account ID is used as reference to a participant. The IBAN identifier
        can consist of up to 34 alphanumeric characters and should be entered
        without whitespace. - ALIAS An alias is used as reference to a
        participant. The alias should be created in the FSP as an alternative
        reference to an account owner. Another example of an alias is a username
        in the FSP system. The ALIAS identifier can be in any format. It is also
        possible to use the PartySubIdOrType element for identifying an account
        under an Alias defined by the PartyIdentifier.

    PartyIdentifier:
      title: PartyIdentifier
      type: string
      minLength: 1
      maxLength: 128
      description: Identifier of the Party.

    PartySubIdOrType:
      title: PartySubIdOrType
      type: string
      minLength: 1
      maxLength: 128
      description: >-
        Either a sub-identifier of a PartyIdentifier, or a sub-type of the
        PartyIdType, normally a PersonalIdentifierType.

    FspId:
      title: FspId
      type: string
      minLength: 1
      maxLength: 32
      description: FSP identifier.

    PartyIdInfo:
      title: PartyIdInfo
      type: object
      description: Data model for the complex type PartyIdInfo.
      properties:
        partyIdType:
          $ref: '#/components/schemas/PartyIdType'
          description: Type of the identifier.
        partyIdentifier:
          $ref: '#/components/schemas/PartyIdentifier'
          description: An identifier for the Party.
        partySubIdOrType:
          $ref: '#/components/schemas/PartySubIdOrType'
          description: A sub-identifier or sub-type for the Party.
        fspId:
          $ref: '#/components/schemas/FspId'
          description: FSP ID (if known)
      required:
        - partyIdType
        - partyIdentifier

    MerchantClassificationCode:
      title: MerchantClassificationCode
      type: string
      pattern: '^[\d]{1,4}$'
      description: >-
        A limited set of pre-defined numbers. This list would be a limited set
        of numbers identifying a set of popular merchant types like School Fees,
        Pubs and Restaurants, Groceries, etc.

    PartyName:
      title: PartyName
      type: string
      minLength: 1
      maxLength: 128
      description: Name of the Party. Could be a real name or a nickname.

    FirstName:
      title: FirstName
      type: string
      minLength: 1
      maxLength: 128
      pattern: '^(?!\s*$)[\w .,''-]{1,128}$'
      description: First name of the Party (Name Type).

    MiddleName:
      title: MiddleName
      type: string
      minLength: 1
      maxLength: 128
      pattern: '^(?!\s*$)[\w .,''-]{1,128}$'
      description: Middle name of the Party (Name Type).

    LastName:
      title: LastName
      type: string
      minLength: 1
      maxLength: 128
      pattern: '^(?!\s*$)[\w .,''-]{1,128}$'
      description: Last name of the Party (Name Type).

    PartyComplexName:
      title: PartyComplexName
      type: object
      description: Data model for the complex type PartyComplexName.
      properties:
        firstName:
          $ref: '#/components/schemas/FirstName'
          description: Partyâ€™s first name.
        middleName:
          $ref: '#/components/schemas/MiddleName'
          description: Partyâ€™s middle name.
        lastName:
          $ref: '#/components/schemas/LastName'
          description: Partyâ€™s last name.

    PartyPersonalInfo:
      title: PartyPersonalInfo
      type: object
      description: Data model for the complex type PartyPersonalInfo.
      properties:
        complexName:
          $ref: '#/components/schemas/PartyComplexName'
          description: 'First, middle and last name for the Party.'
        dateOfBirth:
          $ref: '#/components/schemas/DateOfBirth'
          description: Date of birth for the Party.

    Party:
      title: Party
      type: object
      description: Data model for the complex type Party.
      properties:
        partyIdInfo:
          $ref: '#/components/schemas/PartyIdInfo'
          description: 'Party Id type, id, sub ID or type, and FSP Id.'
        merchantClassificationCode:
          $ref: '#/components/schemas/MerchantClassificationCode'
          description: >-
            Used in the context of Payee Information, where the Payee happens to
            be a merchant accepting merchant payments.
        name:
          $ref: '#/components/schemas/PartyName'
          description: 'Display name of the Party, could be a real name or a nick name.'
        personalInfo:
          $ref: '#/components/schemas/PartyPersonalInfo'
          description: >-
            Personal information used to verify identity of Party such as first,
            middle, last name and date of birth.
      required:
        - partyIdInfo

    Latitude:
      title: Latitude
      type: string
      pattern: >-
        ^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,6})?))$
      description: >-
        The API data type Latitude is a JSON String in a lexical format that is
        restricted by a regular expression for interoperability reasons.

    Longitude:
      title: Longitude
      type: string
      pattern: >-
        ^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,6})?))$
      description: >-
        The API data type Longitude is a JSON String in a lexical format that is
        restricted by a regular expression for interoperability reasons.

    GeoCode:
      title: GeoCode
      type: object
      description: >-
        Data model for the complex type GeoCode. Indicates the geographic
        location from where the transaction was initiated.
      properties:
        latitude:
          $ref: '#/components/schemas/Latitude'
          description: Latitude of the Party.
        longitude:
          $ref: '#/components/schemas/Longitude'
          description: Longitude of the   Party.
      required:
        - latitude
        - longitude      

    Note:
      title: Note
      type: string
      minLength: 1
      maxLength: 128
      description: Memo assigned to transaction     

    DateTime:
      title: DateTime
      type: string
      pattern: >-
        ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
      description: >-
        The API data type DateTime is a JSON String in a lexical format that is
        restricted by a regular expression for interoperability reasons. The
        format is according to ISO 8601, expressed in a combined date, time and
        time zone format. A more readable version of the format is
        yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples - 
        "2016-05-24T08:38:08.699-04:00", "2016-05-24T08:38:08.699Z" (where Z
        indicates Zulu time zone, same as UTC).

    ExtensionKey:
      title: ExtensionKey
      type: string
      minLength: 1
      maxLength: 32
      description: Extension key.
      
    ExtensionValue:
      title: ExtensionValue
      type: string
      minLength: 1
      maxLength: 128
      description: Extension value.        

    Extension:
      title: Extension
      type: object
      description: Data model for the complex type Extension
      properties:
        key:
          $ref: '#/components/schemas/ExtensionKey'
          description: Extension key.
        value:
          $ref: '#/components/schemas/ExtensionValue'
          description: Extension value.
      required:
        - key
        - value

    ExtensionList:
      title: ExtensionList
      type: object
      description: Data model for the complex type ExtensionList
      properties:
        extension:
          type: array
          items:
            $ref: '#/components/schemas/Extension'
          minItems: 1
          maxItems: 16
          description: Number of Extension elements
      required:
        - extension

    QuotePostRequest:
      title: QuotePostRequest
      type: object
      required:
        - quoteId
        - transactionId
        - payee
        - payer
        - amountType
        - amount
        - transactionType
      description: POST /quote object
      properties:
        quoteId:
          $ref: '#/components/schemas/CorrelationId'
          description: >-
            Common ID between the FSPs for the quote object, decided by the
            Payer FSP. The ID should be reused for resends of the same quote for
            a transaction. A new ID should be generated for each new quote for a
            transaction.
        transactionId:
          $ref: '#/components/schemas/CorrelationId'
          description: >-
            Common ID (decided by the Payer FSP) between the FSPs for the future
            transaction object. The actual transaction will be created as part
            of a successful transfer process. The ID should be reused for
            resends of the same quote for a transaction. A new ID should be
            generated for each new quote for a transaction.
        transactionRequestId:
          $ref: '#/components/schemas/CorrelationId'
          description: Identifies an optional previously-sent transaction request.
        payee:
          $ref: '#/components/schemas/Party'
          description: Information about the Payee in the proposed financial transaction.
        payer:
          $ref: '#/components/schemas/Party'
          description: Information about the Payer in the proposed financial transaction.
        amountType:
          $ref: '#/components/schemas/AmountType'
          description: 'SEND for send amount, RECEIVE for receive amount.'
        amount:
          $ref: '#/components/schemas/Money'
          description: >-
            Depending on amountType. If SEND - The amount the Payer would like
            to send, that is, the amount that should be withdrawn from the Payer
            account including any fees. The amount is updated by each
            participating entity in the transaction. If RECEIVE - The amount the
            Payee should receive, that is, the amount that should be sent to the
            receiver exclusive any fees. The amount is not updated by any of the
            participating entities.
        fees:
          $ref: '#/components/schemas/Money'
          description: >-
            The fees in the transaction. The fees element should be empty if
            fees should be non-disclosed. The fees element should be non-empty
            if fees should be disclosed.
        transactionType:
          $ref: '#/components/schemas/TransactionType'
          description: Type of transaction for which the quote is requested.
        geoCode:
          $ref: '#/components/schemas/GeoCode'
          description: >-
            Longitude and Latitude of the initiating Party. Can be used to
            detect fraud.
        note:
          $ref: '#/components/schemas/Note'
          description: A memo that will be attached to the transaction.
        expiration:
          $ref: '#/components/schemas/DateTime'
          description: >-
            Expiration is optional. It can be set to get a quick failure in case
            the peer FSP takes too long to respond. Also, it may be beneficial
            for Consumer, Agent, and Merchant to know that their request has a
            time limit.
        extensionList:
          $ref: '#/components/schemas/ExtensionList'
          description: 'Optional extension, specific to deployment.'
    
          
  responses:
    '200':
      description: Transfer completed successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transferResponse'
    '500':
      description: An error occurred processing the transfer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
    Response202:
      description: Accepted            
    
  parameters:
    transferId:
      name: transferId
      in: path
      required: true
      schema:
        pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
        type: string
      description: Identifier of the transfer.
    Accept:
        name: Accept
        in: header
        required: true
        type: string
        description: The Accept header field indicates the version of the API the client would like the server to use.
    Content-Length:
      name: Content-Length
      in: header
      required: false
      type: integer
      description: The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body. Note - The API supports a maximum size of 5242880 bytes (5 Megabytes)
    Content-Type:
      name: Content-Type
      in: header
      type: string
      required: true
      description: The Content-Type header indicates the specific version of the API used to send the payload body.
    Date:
      name: Date
      in: header
      type: string
      required: true
      description: The Date header field indicates the date when the request was sent.
    X-Forwarded-For:
      name: X-Forwarded-For
      in: header
      type: string
      required: false
      description: The X-Forwarded-For header field is an unofficially accepted standard used for informational purposes of the originating client IP address, as a request might pass multiple proxies, firewalls, and so on. Multiple X-Forwarded-For values as in the example shown here should be expected and supported by implementers of the API.
        Note - An alternative to X-Forwarded-For is defined in RFC 7239. However, to this point RFC 7239 is less-used and supported than X-Forwarded-For.
    FSPIOP-Source:
      name: FSPIOP-Source
      in: header
      type: string
      required: true
      description: The FSPIOP-Source header field is a non-HTTP standard field used by the API for identifying the sender of the HTTP request. The field should be set by the original sender of the request. Required for routing and signature verification (see header field FSPIOP-Signature). 
    FSPIOP-Destination:
      name: FSPIOP-Destination
      in: header
      type: string
      required: false
      description: The FSPIOP-Destination header field is a non-HTTP standard field used by the API for HTTP header based routing of requests and responses to the destination. The field should be set by the original sender of the request (if known), so that any entities between the client and the server do not need to parse the payload for routing purposes.
    FSPIOP-Encryption:
      name: FSPIOP-Encryption
      in: header
      type: string
      required: false
      description: The FSPIOP-Encryption header field is a non-HTTP standard field used by the API for applying end-to-end encryption of the request.
    FSPIOP-Signature:
      name: FSPIOP-Signature
      in: header
      type: string
      required: false
      description: The FSPIOP-Signature header field is a non-HTTP standard field used by the API for applying an end-to-end request signature.
    FSPIOP-URI:
      name: FSPIOP-URI
      in: header
      type: string
      required: false
      description: The FSPIOP-URI header field is a non-HTTP standard field used by the API for signature verification, should contain the service URI. Required if signature verification is used, for more information see API Signature document.
    FSPIOP-HTTP-Method:
      name: FSPIOP-HTTP-Method
      in: header
      type: string
      required: false
      description: The FSPIOP-HTTP-Method header field is a non-HTTP standard field used by the API for signature verification, should contain the service HTTP method. Required if signature verification is used, for more information see API Signature document.
